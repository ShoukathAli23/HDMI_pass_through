// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="pixel_pack,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=7.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.631000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1068,HLS_SYN_LUT=1771}" *)

module pixel_pack (
        ap_clk,
        ap_rst_n,
        stream_in_24_TDATA,
        stream_in_24_TVALID,
        stream_in_24_TREADY,
        stream_in_24_TUSER,
        stream_in_24_TLAST,
        stream_out_32_TDATA,
        stream_out_32_TVALID,
        stream_out_32_TREADY,
        stream_out_32_TUSER,
        stream_out_32_TLAST,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        control,
        ap_rst_n_control
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_pp0_stage0 = 19'd4;
parameter    ap_ST_fsm_pp0_stage1 = 19'd8;
parameter    ap_ST_fsm_state6 = 19'd16;
parameter    ap_ST_fsm_pp1_stage0 = 19'd32;
parameter    ap_ST_fsm_pp1_stage1 = 19'd64;
parameter    ap_ST_fsm_pp2_stage0 = 19'd128;
parameter    ap_ST_fsm_pp2_stage1 = 19'd256;
parameter    ap_ST_fsm_pp2_stage2 = 19'd512;
parameter    ap_ST_fsm_pp2_stage3 = 19'd1024;
parameter    ap_ST_fsm_state16 = 19'd2048;
parameter    ap_ST_fsm_pp3_stage0 = 19'd4096;
parameter    ap_ST_fsm_state19 = 19'd8192;
parameter    ap_ST_fsm_pp4_stage0 = 19'd16384;
parameter    ap_ST_fsm_pp4_stage1 = 19'd32768;
parameter    ap_ST_fsm_pp4_stage2 = 19'd65536;
parameter    ap_ST_fsm_pp4_stage3 = 19'd131072;
parameter    ap_ST_fsm_state28 = 19'd262144;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [23:0] stream_in_24_TDATA;
input   stream_in_24_TVALID;
output   stream_in_24_TREADY;
input  [0:0] stream_in_24_TUSER;
input  [0:0] stream_in_24_TLAST;
output  [31:0] stream_out_32_TDATA;
output   stream_out_32_TVALID;
input   stream_out_32_TREADY;
output  [0:0] stream_out_32_TUSER;
output  [0:0] stream_out_32_TLAST;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   control;
input   ap_rst_n_control;

reg    ap_rst_n_inv;
reg   [23:0] stream_in_24_data_V_0_data_out;
wire    stream_in_24_data_V_0_vld_in;
wire    stream_in_24_data_V_0_vld_out;
wire    stream_in_24_data_V_0_ack_in;
reg    stream_in_24_data_V_0_ack_out;
reg   [23:0] stream_in_24_data_V_0_payload_A;
reg   [23:0] stream_in_24_data_V_0_payload_B;
reg    stream_in_24_data_V_0_sel_rd;
reg    stream_in_24_data_V_0_sel_wr;
wire    stream_in_24_data_V_0_sel;
wire    stream_in_24_data_V_0_load_A;
wire    stream_in_24_data_V_0_load_B;
reg   [1:0] stream_in_24_data_V_0_state;
wire    stream_in_24_data_V_0_state_cmp_full;
reg   [0:0] stream_in_24_user_V_0_data_out;
wire    stream_in_24_user_V_0_vld_in;
wire    stream_in_24_user_V_0_vld_out;
wire    stream_in_24_user_V_0_ack_in;
reg    stream_in_24_user_V_0_ack_out;
reg   [0:0] stream_in_24_user_V_0_payload_A;
reg   [0:0] stream_in_24_user_V_0_payload_B;
reg    stream_in_24_user_V_0_sel_rd;
reg    stream_in_24_user_V_0_sel_wr;
wire    stream_in_24_user_V_0_sel;
wire    stream_in_24_user_V_0_load_A;
wire    stream_in_24_user_V_0_load_B;
reg   [1:0] stream_in_24_user_V_0_state;
wire    stream_in_24_user_V_0_state_cmp_full;
reg   [0:0] stream_in_24_last_V_0_data_out;
wire    stream_in_24_last_V_0_vld_in;
wire    stream_in_24_last_V_0_vld_out;
wire    stream_in_24_last_V_0_ack_in;
reg    stream_in_24_last_V_0_ack_out;
reg   [0:0] stream_in_24_last_V_0_payload_A;
reg   [0:0] stream_in_24_last_V_0_payload_B;
reg    stream_in_24_last_V_0_sel_rd;
reg    stream_in_24_last_V_0_sel_wr;
wire    stream_in_24_last_V_0_sel;
wire    stream_in_24_last_V_0_load_A;
wire    stream_in_24_last_V_0_load_B;
reg   [1:0] stream_in_24_last_V_0_state;
wire    stream_in_24_last_V_0_state_cmp_full;
reg   [31:0] stream_out_32_data_V_1_data_in;
reg   [31:0] stream_out_32_data_V_1_data_out;
reg    stream_out_32_data_V_1_vld_in;
wire    stream_out_32_data_V_1_vld_out;
wire    stream_out_32_data_V_1_ack_in;
wire    stream_out_32_data_V_1_ack_out;
reg   [31:0] stream_out_32_data_V_1_payload_A;
reg   [31:0] stream_out_32_data_V_1_payload_B;
reg    stream_out_32_data_V_1_sel_rd;
reg    stream_out_32_data_V_1_sel_wr;
wire    stream_out_32_data_V_1_sel;
wire    stream_out_32_data_V_1_load_A;
wire    stream_out_32_data_V_1_load_B;
reg   [1:0] stream_out_32_data_V_1_state;
wire    stream_out_32_data_V_1_state_cmp_full;
reg   [0:0] stream_out_32_user_V_1_data_in;
reg   [0:0] stream_out_32_user_V_1_data_out;
reg    stream_out_32_user_V_1_vld_in;
wire    stream_out_32_user_V_1_vld_out;
wire    stream_out_32_user_V_1_ack_in;
wire    stream_out_32_user_V_1_ack_out;
reg   [0:0] stream_out_32_user_V_1_payload_A;
reg   [0:0] stream_out_32_user_V_1_payload_B;
reg    stream_out_32_user_V_1_sel_rd;
reg    stream_out_32_user_V_1_sel_wr;
wire    stream_out_32_user_V_1_sel;
wire    stream_out_32_user_V_1_load_A;
wire    stream_out_32_user_V_1_load_B;
reg   [1:0] stream_out_32_user_V_1_state;
wire    stream_out_32_user_V_1_state_cmp_full;
reg   [0:0] stream_out_32_last_V_1_data_in;
reg   [0:0] stream_out_32_last_V_1_data_out;
reg    stream_out_32_last_V_1_vld_in;
wire    stream_out_32_last_V_1_vld_out;
wire    stream_out_32_last_V_1_ack_in;
wire    stream_out_32_last_V_1_ack_out;
reg   [0:0] stream_out_32_last_V_1_payload_A;
reg   [0:0] stream_out_32_last_V_1_payload_B;
reg    stream_out_32_last_V_1_sel_rd;
reg    stream_out_32_last_V_1_sel_wr;
wire    stream_out_32_last_V_1_sel;
wire    stream_out_32_last_V_1_load_A;
wire    stream_out_32_last_V_1_load_B;
reg   [1:0] stream_out_32_last_V_1_state;
wire    stream_out_32_last_V_1_state_cmp_full;
wire   [31:0] mode;
reg   [31:0] mode_0_data_reg;
reg    mode_0_vld_reg;
reg    mode_0_ack_out;
wire   [7:0] alpha_V;
reg   [7:0] alpha_V_0_data_reg;
reg    alpha_V_0_vld_reg;
reg    alpha_V_0_ack_out;
reg    stream_in_24_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_pp4_stage1;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_pp4_stage1;
reg   [0:0] delayed_last_reg_355;
reg   [0:0] delayed_last_2_reg_343;
wire    ap_CS_fsm_pp4_stage2;
wire    ap_block_pp4_stage2;
reg   [0:0] last_2_reg_404;
wire    ap_CS_fsm_pp4_stage3;
wire    ap_block_pp4_stage3;
reg   [0:0] last_2_1_reg_448;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_pp4_stage0;
reg   [0:0] last_2_2_reg_492;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_pp3_stage0;
wire    ap_CS_fsm_pp2_stage1;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_pp2_stage1;
reg   [0:0] delayed_last_1_reg_179;
reg   [0:0] delayed_last_3_reg_167;
wire    ap_CS_fsm_pp2_stage2;
wire    ap_block_pp2_stage2;
reg   [0:0] last_6_reg_204;
wire    ap_CS_fsm_pp2_stage3;
wire    ap_block_pp2_stage3;
reg   [0:0] last_6_1_reg_238;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] last_6_2_reg_271;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage1;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg    stream_out_32_TDATA_blk_n;
reg   [0:0] ap_reg_pp4_iter1_delayed_last_2_reg_343;
reg    ap_enable_reg_pp3_iter1;
reg   [0:0] ap_reg_pp2_iter1_delayed_last_3_reg_167;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg    ap_rst_n_control_inv;
wire    ap_block_state10_pp2_stage0_iter0;
reg    ap_predicate_op153_read_state14;
reg    ap_block_state14_pp2_stage0_iter1;
reg    ap_block_state14_io;
reg    ap_block_pp2_stage0_11001;
reg   [0:0] ap_reg_pp2_iter1_delayed_last_1_reg_179;
reg   [31:0] p_0467_s_reg_192;
reg   [31:0] p_0467_2_3_reg_302;
wire    ap_block_state20_pp4_stage0_iter0;
reg    ap_predicate_op235_read_state24;
reg    ap_block_state24_pp4_stage0_iter1;
reg    ap_block_state24_io;
reg    ap_block_pp4_stage0_11001;
reg   [0:0] ap_reg_pp4_iter1_delayed_last_reg_355;
reg   [3:0] p_071_s_reg_368;
reg   [3:0] p_067_s_reg_380;
reg   [95:0] p_087_s_reg_392;
reg    ap_predicate_op191_read_state21;
reg    ap_block_state21_pp4_stage1_iter0;
wire    ap_block_state25_pp4_stage1_iter1;
reg    ap_block_state25_io;
reg    ap_block_pp4_stage1_11001;
reg    ap_predicate_op207_read_state22;
reg    ap_block_state22_pp4_stage2_iter0;
wire    ap_block_state26_pp4_stage2_iter1;
reg    ap_block_state26_io;
reg    ap_block_pp4_stage2_11001;
reg   [3:0] p_071_2_3_reg_533;
reg   [3:0] p_067_2_3_reg_545;
reg   [95:0] p_087_2_3_reg_557;
reg   [7:0] alpha_V_read_reg_1069;
wire    ap_CS_fsm_state2;
wire   [31:0] grp_read_fu_138_p2;
wire   [0:0] grp_fu_589_p1;
reg    ap_block_state4_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
wire   [0:0] user_3_1_fu_615_p2;
wire   [31:0] p_Result_2_fu_718_p5;
reg    ap_block_state8_pp1_stage1_iter0;
reg    ap_block_pp1_stage1_11001;
wire   [0:0] user_2_1_fu_743_p2;
wire   [31:0] p_Result_35_1_fu_754_p3;
reg    ap_predicate_op113_read_state11;
reg    ap_block_state11_pp2_stage1_iter0;
wire    ap_block_state15_pp2_stage1_iter1;
reg    ap_block_state15_io;
reg    ap_block_pp2_stage1_11001;
wire   [31:0] p_Result_9_fu_767_p5;
wire   [0:0] user_s_fu_783_p2;
reg    ap_predicate_op127_read_state12;
reg    ap_block_state12_pp2_stage2_iter0;
reg    ap_block_pp2_stage2_11001;
wire   [31:0] p_Result_33_1_fu_793_p5;
wire   [0:0] user_2_fu_809_p2;
reg    ap_predicate_op140_read_state13;
reg    ap_block_state13_pp2_stage3_iter0;
reg    ap_block_pp2_stage3_11001;
wire   [31:0] p_Result_33_2_fu_819_p5;
reg    ap_block_state17_pp3_stage0_iter0;
wire    ap_block_state18_pp3_stage0_iter1;
reg    ap_block_pp3_stage0_11001;
wire   [31:0] p_Result_s_fu_859_p3;
wire   [95:0] p_Result_7_fu_867_p5;
reg   [3:0] tmp_13_fu_879_p4;
reg   [3:0] tmp_14_fu_889_p4;
wire   [95:0] p_Result_26_1_fu_899_p5;
reg   [3:0] tmp_16_fu_911_p4;
reg   [3:0] tmp_17_fu_921_p4;
wire   [95:0] p_Result_26_2_fu_931_p5;
reg    ap_predicate_op221_read_state23;
reg    ap_block_state23_pp4_stage3_iter0;
wire    ap_block_state27_pp4_stage3_iter1;
reg    ap_block_state27_io;
reg    ap_block_pp4_stage3_11001;
reg   [3:0] tmp_19_fu_943_p4;
reg   [3:0] tmp_20_fu_953_p4;
wire   [31:0] tmp_25_fu_998_p1;
wire   [0:0] tmp_26_fu_1003_p1;
reg   [31:0] p_Result_29_1_reg_1213;
reg   [0:0] tmp_28_reg_1218;
reg   [0:0] tmp_29_reg_1223;
reg   [31:0] p_Result_29_2_reg_1228;
reg   [0:0] tmp_30_reg_1233;
reg   [0:0] tmp_31_reg_1238;
reg    ap_block_pp0_stage1_subdone;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp1_stage1_subdone;
wire    ap_block_state7_pp1_stage0_iter0;
wire    ap_block_state9_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_subdone;
reg    ap_block_pp2_stage1_subdone;
reg    ap_condition_pp2_exit_iter0_state11;
reg    ap_block_pp2_stage3_subdone;
reg    ap_block_pp3_stage0_subdone;
reg    ap_block_pp4_stage1_subdone;
reg    ap_condition_pp4_exit_iter0_state21;
reg    ap_block_pp4_stage3_subdone;
reg   [0:0] ap_phi_mux_last_6_3_phi_fu_321_p4;
reg   [31:0] ap_phi_mux_p_0467_s_phi_fu_196_p4;
wire   [0:0] ap_phi_reg_pp2_iter0_last_6_reg_204;
reg   [31:0] ap_phi_reg_pp2_iter0_p_0467_2_reg_215;
reg   [0:0] ap_phi_reg_pp2_iter0_user_1_reg_226;
wire   [0:0] ap_phi_reg_pp2_iter0_last_6_1_reg_238;
reg   [31:0] ap_phi_reg_pp2_iter0_p_0467_2_1_reg_249;
reg   [0:0] ap_phi_reg_pp2_iter0_user_1_1_reg_260;
wire   [0:0] ap_phi_reg_pp2_iter0_last_6_2_reg_271;
wire   [31:0] ap_phi_reg_pp2_iter0_p_0467_2_2_reg_282;
reg   [31:0] ap_phi_reg_pp2_iter1_p_0467_2_2_reg_282;
wire   [0:0] ap_phi_reg_pp2_iter0_user_1_2_reg_292;
reg   [0:0] ap_phi_reg_pp2_iter1_user_1_2_reg_292;
reg   [31:0] ap_phi_mux_p_0467_2_3_phi_fu_307_p4;
wire   [31:0] p_Result_33_3_fu_846_p5;
wire   [31:0] ap_phi_reg_pp2_iter1_p_0467_2_3_reg_302;
wire   [0:0] ap_phi_reg_pp2_iter1_last_6_3_reg_316;
reg   [0:0] ap_phi_mux_user_1_3_phi_fu_334_p4;
wire   [0:0] user_3_fu_835_p2;
wire   [0:0] ap_phi_reg_pp2_iter1_user_1_3_reg_330;
reg   [0:0] ap_phi_mux_last_2_3_phi_fu_573_p4;
reg   [3:0] ap_phi_mux_p_071_s_phi_fu_372_p4;
reg   [3:0] ap_phi_mux_p_067_s_phi_fu_384_p4;
reg   [95:0] ap_phi_mux_p_087_s_phi_fu_396_p4;
wire   [0:0] ap_phi_reg_pp4_iter0_last_2_reg_404;
reg   [3:0] ap_phi_reg_pp4_iter0_p_071_2_reg_415;
reg   [3:0] ap_phi_reg_pp4_iter0_p_067_2_reg_426;
reg   [95:0] ap_phi_reg_pp4_iter0_p_087_2_reg_437;
wire   [0:0] ap_phi_reg_pp4_iter0_last_2_1_reg_448;
reg   [3:0] ap_phi_reg_pp4_iter0_p_071_2_1_reg_459;
reg   [3:0] ap_phi_reg_pp4_iter0_p_067_2_1_reg_470;
reg   [95:0] ap_phi_reg_pp4_iter0_p_087_2_1_reg_481;
wire   [0:0] ap_phi_reg_pp4_iter0_last_2_2_reg_492;
wire   [3:0] ap_phi_reg_pp4_iter0_p_071_2_2_reg_503;
reg   [3:0] ap_phi_reg_pp4_iter1_p_071_2_2_reg_503;
wire   [3:0] ap_phi_reg_pp4_iter0_p_067_2_2_reg_513;
reg   [3:0] ap_phi_reg_pp4_iter1_p_067_2_2_reg_513;
wire   [95:0] ap_phi_reg_pp4_iter0_p_087_2_2_reg_523;
reg   [95:0] ap_phi_reg_pp4_iter1_p_087_2_2_reg_523;
reg   [3:0] ap_phi_mux_p_071_2_3_phi_fu_537_p4;
reg   [3:0] tmp_22_fu_976_p4;
wire   [3:0] ap_phi_reg_pp4_iter1_p_071_2_3_reg_533;
reg   [3:0] ap_phi_mux_p_067_2_3_phi_fu_549_p4;
reg   [3:0] tmp_23_fu_987_p4;
wire   [3:0] ap_phi_reg_pp4_iter1_p_067_2_3_reg_545;
reg   [95:0] ap_phi_mux_p_087_2_3_phi_fu_561_p4;
wire   [95:0] p_Result_26_3_fu_963_p5;
wire   [95:0] ap_phi_reg_pp4_iter1_p_087_2_3_reg_557;
wire   [0:0] ap_phi_reg_pp4_iter1_last_2_3_reg_569;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp1_stage1_01001;
reg    ap_block_pp2_stage0_01001;
reg    ap_block_pp3_stage0_01001;
reg    ap_block_pp4_stage0_01001;
reg    ap_block_pp4_stage1_01001;
reg    ap_block_pp4_stage2_01001;
wire    ap_block_pp0_stage0_01001;
reg    ap_block_pp0_stage0_11001;
wire    ap_block_pp1_stage0_01001;
reg    ap_block_pp1_stage0_11001;
reg    ap_block_pp2_stage1_01001;
reg    ap_block_pp4_stage3_01001;
wire   [7:0] p_Result_s_30_fu_622_p4;
wire   [7:0] p_Result_1_fu_636_p4;
wire   [8:0] tmp_fu_632_p1;
wire   [8:0] tmp_1_fu_646_p1;
wire   [7:0] p_Result_3_fu_656_p4;
wire   [7:0] p_Result_4_fu_670_p4;
wire   [8:0] tmp_3_fu_666_p1;
wire   [8:0] tmp_4_fu_680_p1;
wire   [8:0] out_c1_V_fu_650_p2;
wire   [8:0] out_c2_V_fu_684_p2;
wire   [7:0] p_Result_8_fu_708_p4;
wire   [7:0] tmp_12_fu_704_p1;
wire   [7:0] p_Result_6_fu_694_p4;
wire   [7:0] tmp_11_fu_690_p1;
wire   [15:0] tmp_10_fu_750_p1;
wire   [15:0] tmp_8_fu_735_p1;
wire   [7:0] tmp_15_fu_763_p1;
wire   [7:0] tmp_18_fu_789_p1;
wire   [7:0] tmp_21_fu_815_p1;
wire   [7:0] tmp_24_fu_842_p1;
wire    ap_CS_fsm_state6;
reg    ap_block_state6;
reg   [18:0] ap_NS_fsm;
reg    ap_block_pp2_stage0_subdone;
reg    ap_block_pp2_stage2_subdone;
reg    ap_block_pp4_stage0_subdone;
reg    ap_block_pp4_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_condition_1111;
reg    ap_condition_1051;
reg    ap_condition_1749;
reg    ap_condition_1753;
reg    ap_condition_1079;
reg    ap_condition_1760;
reg    ap_condition_1764;
reg    ap_condition_1144;
reg    ap_condition_1130;
reg    ap_condition_1122;
reg    ap_condition_1067;
reg    ap_condition_873;
reg    ap_condition_1049;
reg    ap_condition_1109;

// power-on initialization
initial begin
#0 stream_in_24_data_V_0_sel_rd = 1'b0;
#0 stream_in_24_data_V_0_sel_wr = 1'b0;
#0 stream_in_24_data_V_0_state = 2'd0;
#0 stream_in_24_user_V_0_sel_rd = 1'b0;
#0 stream_in_24_user_V_0_sel_wr = 1'b0;
#0 stream_in_24_user_V_0_state = 2'd0;
#0 stream_in_24_last_V_0_sel_rd = 1'b0;
#0 stream_in_24_last_V_0_sel_wr = 1'b0;
#0 stream_in_24_last_V_0_state = 2'd0;
#0 stream_out_32_data_V_1_sel_rd = 1'b0;
#0 stream_out_32_data_V_1_sel_wr = 1'b0;
#0 stream_out_32_data_V_1_state = 2'd0;
#0 stream_out_32_user_V_1_sel_rd = 1'b0;
#0 stream_out_32_user_V_1_sel_wr = 1'b0;
#0 stream_out_32_user_V_1_state = 2'd0;
#0 stream_out_32_last_V_1_sel_rd = 1'b0;
#0 stream_out_32_last_V_1_sel_wr = 1'b0;
#0 stream_out_32_last_V_1_state = 2'd0;
#0 mode_0_data_reg = 32'd0;
#0 mode_0_vld_reg = 1'b0;
#0 alpha_V_0_data_reg = 8'd0;
#0 alpha_V_0_vld_reg = 1'b0;
#0 ap_CS_fsm = 19'd1;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

pixel_pack_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
pixel_pack_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(control),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .mode(mode),
    .alpha_V(alpha_V),
    .clk(ap_clk),
    .rst(ap_rst_n_control_inv)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (grp_fu_589_p1 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((grp_read_fu_138_p2 == 32'd4) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((grp_read_fu_138_p2 == 32'd4) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (grp_fu_589_p1 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((grp_read_fu_138_p2 == 32'd3) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((grp_read_fu_138_p2 == 32'd3) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_condition_pp2_exit_iter0_state11) & (1'b0 == ap_block_pp2_stage1_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((grp_read_fu_138_p2 == 32'd2) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state11) & (((1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3_subdone)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_subdone))))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state11);
        end else if ((((1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3_subdone)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_subdone)))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((grp_read_fu_138_p2 == 32'd2) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((grp_fu_589_p1 == 1'd1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((grp_read_fu_138_p2 == 32'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if (((grp_read_fu_138_p2 == 32'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage1) & (1'b1 == ap_condition_pp4_exit_iter0_state21) & (1'b0 == ap_block_pp4_stage1_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((grp_read_fu_138_p2 == 32'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage3) & (1'b1 == ap_condition_pp4_exit_iter0_state21) & (1'b0 == ap_block_pp4_stage3_subdone))) begin
            ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state21);
        end else if (((1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3_subdone))) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if (((grp_read_fu_138_p2 == 32'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_in_24_data_V_0_sel_rd <= 1'b0;
    end else begin
        if (((stream_in_24_data_V_0_ack_out == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b1))) begin
            stream_in_24_data_V_0_sel_rd <= ~stream_in_24_data_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_in_24_data_V_0_sel_wr <= 1'b0;
    end else begin
        if (((stream_in_24_data_V_0_ack_in == 1'b1) & (stream_in_24_data_V_0_vld_in == 1'b1))) begin
            stream_in_24_data_V_0_sel_wr <= ~stream_in_24_data_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_in_24_data_V_0_state <= 2'd0;
    end else begin
        if ((((stream_in_24_data_V_0_state == 2'd2) & (stream_in_24_data_V_0_vld_in == 1'b0)) | ((stream_in_24_data_V_0_state == 2'd3) & (stream_in_24_data_V_0_vld_in == 1'b0) & (stream_in_24_data_V_0_ack_out == 1'b1)))) begin
            stream_in_24_data_V_0_state <= 2'd2;
        end else if ((((stream_in_24_data_V_0_state == 2'd1) & (stream_in_24_data_V_0_ack_out == 1'b0)) | ((stream_in_24_data_V_0_state == 2'd3) & (stream_in_24_data_V_0_ack_out == 1'b0) & (stream_in_24_data_V_0_vld_in == 1'b1)))) begin
            stream_in_24_data_V_0_state <= 2'd1;
        end else if (((~((stream_in_24_data_V_0_vld_in == 1'b0) & (stream_in_24_data_V_0_ack_out == 1'b1)) & ~((stream_in_24_data_V_0_ack_out == 1'b0) & (stream_in_24_data_V_0_vld_in == 1'b1)) & (stream_in_24_data_V_0_state == 2'd3)) | ((stream_in_24_data_V_0_state == 2'd1) & (stream_in_24_data_V_0_ack_out == 1'b1)) | ((stream_in_24_data_V_0_state == 2'd2) & (stream_in_24_data_V_0_vld_in == 1'b1)))) begin
            stream_in_24_data_V_0_state <= 2'd3;
        end else begin
            stream_in_24_data_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_in_24_last_V_0_sel_rd <= 1'b0;
    end else begin
        if (((stream_in_24_last_V_0_ack_out == 1'b1) & (stream_in_24_last_V_0_vld_out == 1'b1))) begin
            stream_in_24_last_V_0_sel_rd <= ~stream_in_24_last_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_in_24_last_V_0_sel_wr <= 1'b0;
    end else begin
        if (((stream_in_24_last_V_0_ack_in == 1'b1) & (stream_in_24_last_V_0_vld_in == 1'b1))) begin
            stream_in_24_last_V_0_sel_wr <= ~stream_in_24_last_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_in_24_last_V_0_state <= 2'd0;
    end else begin
        if ((((stream_in_24_last_V_0_state == 2'd2) & (stream_in_24_last_V_0_vld_in == 1'b0)) | ((stream_in_24_last_V_0_state == 2'd3) & (stream_in_24_last_V_0_vld_in == 1'b0) & (stream_in_24_last_V_0_ack_out == 1'b1)))) begin
            stream_in_24_last_V_0_state <= 2'd2;
        end else if ((((stream_in_24_last_V_0_state == 2'd1) & (stream_in_24_last_V_0_ack_out == 1'b0)) | ((stream_in_24_last_V_0_state == 2'd3) & (stream_in_24_last_V_0_ack_out == 1'b0) & (stream_in_24_last_V_0_vld_in == 1'b1)))) begin
            stream_in_24_last_V_0_state <= 2'd1;
        end else if (((~((stream_in_24_last_V_0_vld_in == 1'b0) & (stream_in_24_last_V_0_ack_out == 1'b1)) & ~((stream_in_24_last_V_0_ack_out == 1'b0) & (stream_in_24_last_V_0_vld_in == 1'b1)) & (stream_in_24_last_V_0_state == 2'd3)) | ((stream_in_24_last_V_0_state == 2'd1) & (stream_in_24_last_V_0_ack_out == 1'b1)) | ((stream_in_24_last_V_0_state == 2'd2) & (stream_in_24_last_V_0_vld_in == 1'b1)))) begin
            stream_in_24_last_V_0_state <= 2'd3;
        end else begin
            stream_in_24_last_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_in_24_user_V_0_sel_rd <= 1'b0;
    end else begin
        if (((stream_in_24_user_V_0_ack_out == 1'b1) & (stream_in_24_user_V_0_vld_out == 1'b1))) begin
            stream_in_24_user_V_0_sel_rd <= ~stream_in_24_user_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_in_24_user_V_0_sel_wr <= 1'b0;
    end else begin
        if (((stream_in_24_user_V_0_vld_in == 1'b1) & (stream_in_24_user_V_0_ack_in == 1'b1))) begin
            stream_in_24_user_V_0_sel_wr <= ~stream_in_24_user_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_in_24_user_V_0_state <= 2'd0;
    end else begin
        if ((((stream_in_24_user_V_0_state == 2'd2) & (stream_in_24_user_V_0_vld_in == 1'b0)) | ((stream_in_24_user_V_0_state == 2'd3) & (stream_in_24_user_V_0_vld_in == 1'b0) & (stream_in_24_user_V_0_ack_out == 1'b1)))) begin
            stream_in_24_user_V_0_state <= 2'd2;
        end else if ((((stream_in_24_user_V_0_state == 2'd1) & (stream_in_24_user_V_0_ack_out == 1'b0)) | ((stream_in_24_user_V_0_state == 2'd3) & (stream_in_24_user_V_0_ack_out == 1'b0) & (stream_in_24_user_V_0_vld_in == 1'b1)))) begin
            stream_in_24_user_V_0_state <= 2'd1;
        end else if (((~((stream_in_24_user_V_0_vld_in == 1'b0) & (stream_in_24_user_V_0_ack_out == 1'b1)) & ~((stream_in_24_user_V_0_ack_out == 1'b0) & (stream_in_24_user_V_0_vld_in == 1'b1)) & (stream_in_24_user_V_0_state == 2'd3)) | ((stream_in_24_user_V_0_state == 2'd1) & (stream_in_24_user_V_0_ack_out == 1'b1)) | ((stream_in_24_user_V_0_state == 2'd2) & (stream_in_24_user_V_0_vld_in == 1'b1)))) begin
            stream_in_24_user_V_0_state <= 2'd3;
        end else begin
            stream_in_24_user_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_out_32_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((stream_out_32_data_V_1_ack_out == 1'b1) & (stream_out_32_data_V_1_vld_out == 1'b1))) begin
            stream_out_32_data_V_1_sel_rd <= ~stream_out_32_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_out_32_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((stream_out_32_data_V_1_ack_in == 1'b1) & (stream_out_32_data_V_1_vld_in == 1'b1))) begin
            stream_out_32_data_V_1_sel_wr <= ~stream_out_32_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_out_32_data_V_1_state <= 2'd0;
    end else begin
        if ((((stream_out_32_data_V_1_state == 2'd2) & (stream_out_32_data_V_1_vld_in == 1'b0)) | ((stream_out_32_data_V_1_state == 2'd3) & (stream_out_32_data_V_1_vld_in == 1'b0) & (stream_out_32_data_V_1_ack_out == 1'b1)))) begin
            stream_out_32_data_V_1_state <= 2'd2;
        end else if ((((stream_out_32_data_V_1_state == 2'd1) & (stream_out_32_data_V_1_ack_out == 1'b0)) | ((stream_out_32_data_V_1_state == 2'd3) & (stream_out_32_data_V_1_ack_out == 1'b0) & (stream_out_32_data_V_1_vld_in == 1'b1)))) begin
            stream_out_32_data_V_1_state <= 2'd1;
        end else if (((~((stream_out_32_data_V_1_vld_in == 1'b0) & (stream_out_32_data_V_1_ack_out == 1'b1)) & ~((stream_out_32_data_V_1_ack_out == 1'b0) & (stream_out_32_data_V_1_vld_in == 1'b1)) & (stream_out_32_data_V_1_state == 2'd3)) | ((stream_out_32_data_V_1_state == 2'd1) & (stream_out_32_data_V_1_ack_out == 1'b1)) | ((stream_out_32_data_V_1_state == 2'd2) & (stream_out_32_data_V_1_vld_in == 1'b1)))) begin
            stream_out_32_data_V_1_state <= 2'd3;
        end else begin
            stream_out_32_data_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_out_32_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((stream_out_32_last_V_1_ack_out == 1'b1) & (stream_out_32_last_V_1_vld_out == 1'b1))) begin
            stream_out_32_last_V_1_sel_rd <= ~stream_out_32_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_out_32_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((stream_out_32_last_V_1_ack_in == 1'b1) & (stream_out_32_last_V_1_vld_in == 1'b1))) begin
            stream_out_32_last_V_1_sel_wr <= ~stream_out_32_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_out_32_last_V_1_state <= 2'd0;
    end else begin
        if ((((stream_out_32_last_V_1_state == 2'd2) & (stream_out_32_last_V_1_vld_in == 1'b0)) | ((stream_out_32_last_V_1_state == 2'd3) & (stream_out_32_last_V_1_vld_in == 1'b0) & (stream_out_32_last_V_1_ack_out == 1'b1)))) begin
            stream_out_32_last_V_1_state <= 2'd2;
        end else if ((((stream_out_32_last_V_1_state == 2'd1) & (stream_out_32_last_V_1_ack_out == 1'b0)) | ((stream_out_32_last_V_1_state == 2'd3) & (stream_out_32_last_V_1_ack_out == 1'b0) & (stream_out_32_last_V_1_vld_in == 1'b1)))) begin
            stream_out_32_last_V_1_state <= 2'd1;
        end else if (((~((stream_out_32_last_V_1_vld_in == 1'b0) & (stream_out_32_last_V_1_ack_out == 1'b1)) & ~((stream_out_32_last_V_1_ack_out == 1'b0) & (stream_out_32_last_V_1_vld_in == 1'b1)) & (stream_out_32_last_V_1_state == 2'd3)) | ((stream_out_32_last_V_1_state == 2'd1) & (stream_out_32_last_V_1_ack_out == 1'b1)) | ((stream_out_32_last_V_1_state == 2'd2) & (stream_out_32_last_V_1_vld_in == 1'b1)))) begin
            stream_out_32_last_V_1_state <= 2'd3;
        end else begin
            stream_out_32_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_out_32_user_V_1_sel_rd <= 1'b0;
    end else begin
        if (((stream_out_32_user_V_1_ack_out == 1'b1) & (stream_out_32_user_V_1_vld_out == 1'b1))) begin
            stream_out_32_user_V_1_sel_rd <= ~stream_out_32_user_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_out_32_user_V_1_sel_wr <= 1'b0;
    end else begin
        if (((stream_out_32_user_V_1_ack_in == 1'b1) & (stream_out_32_user_V_1_vld_in == 1'b1))) begin
            stream_out_32_user_V_1_sel_wr <= ~stream_out_32_user_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_out_32_user_V_1_state <= 2'd0;
    end else begin
        if ((((stream_out_32_user_V_1_state == 2'd2) & (stream_out_32_user_V_1_vld_in == 1'b0)) | ((stream_out_32_user_V_1_state == 2'd3) & (stream_out_32_user_V_1_vld_in == 1'b0) & (stream_out_32_user_V_1_ack_out == 1'b1)))) begin
            stream_out_32_user_V_1_state <= 2'd2;
        end else if ((((stream_out_32_user_V_1_state == 2'd1) & (stream_out_32_user_V_1_ack_out == 1'b0)) | ((stream_out_32_user_V_1_state == 2'd3) & (stream_out_32_user_V_1_ack_out == 1'b0) & (stream_out_32_user_V_1_vld_in == 1'b1)))) begin
            stream_out_32_user_V_1_state <= 2'd1;
        end else if (((~((stream_out_32_user_V_1_vld_in == 1'b0) & (stream_out_32_user_V_1_ack_out == 1'b1)) & ~((stream_out_32_user_V_1_ack_out == 1'b0) & (stream_out_32_user_V_1_vld_in == 1'b1)) & (stream_out_32_user_V_1_state == 2'd3)) | ((stream_out_32_user_V_1_state == 2'd1) & (stream_out_32_user_V_1_ack_out == 1'b1)) | ((stream_out_32_user_V_1_state == 2'd2) & (stream_out_32_user_V_1_vld_in == 1'b1)))) begin
            stream_out_32_user_V_1_state <= 2'd3;
        end else begin
            stream_out_32_user_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1749)) begin
        if ((last_6_reg_204 == 1'd1)) begin
            ap_phi_reg_pp2_iter0_p_0467_2_1_reg_249 <= ap_phi_reg_pp2_iter0_p_0467_2_reg_215;
        end else if ((last_6_reg_204 == 1'd0)) begin
            ap_phi_reg_pp2_iter0_p_0467_2_1_reg_249 <= p_Result_33_1_fu_793_p5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1753)) begin
        if ((delayed_last_3_reg_167 == 1'd1)) begin
            ap_phi_reg_pp2_iter0_p_0467_2_reg_215 <= ap_phi_mux_p_0467_s_phi_fu_196_p4;
        end else if ((delayed_last_3_reg_167 == 1'd0)) begin
            ap_phi_reg_pp2_iter0_p_0467_2_reg_215 <= p_Result_9_fu_767_p5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1749)) begin
        if ((last_6_reg_204 == 1'd1)) begin
            ap_phi_reg_pp2_iter0_user_1_1_reg_260 <= ap_phi_reg_pp2_iter0_user_1_reg_226;
        end else if ((last_6_reg_204 == 1'd0)) begin
            ap_phi_reg_pp2_iter0_user_1_1_reg_260 <= user_s_fu_783_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1753)) begin
        if ((delayed_last_3_reg_167 == 1'd1)) begin
            ap_phi_reg_pp2_iter0_user_1_reg_226 <= 1'd0;
        end else if ((delayed_last_3_reg_167 == 1'd0)) begin
            ap_phi_reg_pp2_iter0_user_1_reg_226 <= stream_in_24_user_V_0_data_out;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1079)) begin
        if (((last_6_1_reg_238 == 1'd1) & (delayed_last_1_reg_179 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_p_0467_2_2_reg_282 <= ap_phi_reg_pp2_iter0_p_0467_2_1_reg_249;
        end else if (((last_6_1_reg_238 == 1'd0) & (delayed_last_1_reg_179 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_p_0467_2_2_reg_282 <= p_Result_33_2_fu_819_p5;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp2_iter1_p_0467_2_2_reg_282 <= ap_phi_reg_pp2_iter0_p_0467_2_2_reg_282;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1079)) begin
        if (((last_6_1_reg_238 == 1'd1) & (delayed_last_1_reg_179 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_user_1_2_reg_292 <= ap_phi_reg_pp2_iter0_user_1_1_reg_260;
        end else if (((last_6_1_reg_238 == 1'd0) & (delayed_last_1_reg_179 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_user_1_2_reg_292 <= user_2_fu_809_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp2_iter1_user_1_2_reg_292 <= ap_phi_reg_pp2_iter0_user_1_2_reg_292;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1760)) begin
        if ((last_2_reg_404 == 1'd1)) begin
            ap_phi_reg_pp4_iter0_p_067_2_1_reg_470 <= ap_phi_reg_pp4_iter0_p_067_2_reg_426;
        end else if ((last_2_reg_404 == 1'd0)) begin
            ap_phi_reg_pp4_iter0_p_067_2_1_reg_470 <= tmp_17_fu_921_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1764)) begin
        if ((delayed_last_2_reg_343 == 1'd1)) begin
            ap_phi_reg_pp4_iter0_p_067_2_reg_426 <= ap_phi_mux_p_067_s_phi_fu_384_p4;
        end else if ((delayed_last_2_reg_343 == 1'd0)) begin
            ap_phi_reg_pp4_iter0_p_067_2_reg_426 <= tmp_14_fu_889_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1760)) begin
        if ((last_2_reg_404 == 1'd1)) begin
            ap_phi_reg_pp4_iter0_p_071_2_1_reg_459 <= ap_phi_reg_pp4_iter0_p_071_2_reg_415;
        end else if ((last_2_reg_404 == 1'd0)) begin
            ap_phi_reg_pp4_iter0_p_071_2_1_reg_459 <= tmp_16_fu_911_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1764)) begin
        if ((delayed_last_2_reg_343 == 1'd1)) begin
            ap_phi_reg_pp4_iter0_p_071_2_reg_415 <= ap_phi_mux_p_071_s_phi_fu_372_p4;
        end else if ((delayed_last_2_reg_343 == 1'd0)) begin
            ap_phi_reg_pp4_iter0_p_071_2_reg_415 <= tmp_13_fu_879_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1760)) begin
        if ((last_2_reg_404 == 1'd1)) begin
            ap_phi_reg_pp4_iter0_p_087_2_1_reg_481 <= ap_phi_reg_pp4_iter0_p_087_2_reg_437;
        end else if ((last_2_reg_404 == 1'd0)) begin
            ap_phi_reg_pp4_iter0_p_087_2_1_reg_481 <= p_Result_26_1_fu_899_p5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1764)) begin
        if ((delayed_last_2_reg_343 == 1'd1)) begin
            ap_phi_reg_pp4_iter0_p_087_2_reg_437 <= ap_phi_mux_p_087_s_phi_fu_396_p4;
        end else if ((delayed_last_2_reg_343 == 1'd0)) begin
            ap_phi_reg_pp4_iter0_p_087_2_reg_437 <= p_Result_7_fu_867_p5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1144)) begin
        if (((last_2_1_reg_448 == 1'd1) & (delayed_last_reg_355 == 1'd0))) begin
            ap_phi_reg_pp4_iter1_p_067_2_2_reg_513 <= ap_phi_reg_pp4_iter0_p_067_2_1_reg_470;
        end else if (((last_2_1_reg_448 == 1'd0) & (delayed_last_reg_355 == 1'd0))) begin
            ap_phi_reg_pp4_iter1_p_067_2_2_reg_513 <= tmp_20_fu_953_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp4_iter1_p_067_2_2_reg_513 <= ap_phi_reg_pp4_iter0_p_067_2_2_reg_513;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1144)) begin
        if (((last_2_1_reg_448 == 1'd1) & (delayed_last_reg_355 == 1'd0))) begin
            ap_phi_reg_pp4_iter1_p_071_2_2_reg_503 <= ap_phi_reg_pp4_iter0_p_071_2_1_reg_459;
        end else if (((last_2_1_reg_448 == 1'd0) & (delayed_last_reg_355 == 1'd0))) begin
            ap_phi_reg_pp4_iter1_p_071_2_2_reg_503 <= tmp_19_fu_943_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp4_iter1_p_071_2_2_reg_503 <= ap_phi_reg_pp4_iter0_p_071_2_2_reg_503;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1144)) begin
        if (((last_2_1_reg_448 == 1'd1) & (delayed_last_reg_355 == 1'd0))) begin
            ap_phi_reg_pp4_iter1_p_087_2_2_reg_523 <= ap_phi_reg_pp4_iter0_p_087_2_1_reg_481;
        end else if (((last_2_1_reg_448 == 1'd0) & (delayed_last_reg_355 == 1'd0))) begin
            ap_phi_reg_pp4_iter1_p_087_2_2_reg_523 <= p_Result_26_2_fu_931_p5;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp4_iter1_p_087_2_2_reg_523 <= ap_phi_reg_pp4_iter0_p_087_2_2_reg_523;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (delayed_last_1_reg_179 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        delayed_last_1_reg_179 <= delayed_last_3_reg_167;
    end else if (((grp_read_fu_138_p2 == 32'd2) & (1'b1 == ap_CS_fsm_state2))) begin
        delayed_last_1_reg_179 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (delayed_last_reg_355 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        delayed_last_2_reg_343 <= ap_phi_mux_last_2_3_phi_fu_573_p4;
    end else if (((grp_read_fu_138_p2 == 32'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        delayed_last_2_reg_343 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (delayed_last_1_reg_179 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        delayed_last_3_reg_167 <= ap_phi_mux_last_6_3_phi_fu_321_p4;
    end else if (((grp_read_fu_138_p2 == 32'd2) & (1'b1 == ap_CS_fsm_state2))) begin
        delayed_last_3_reg_167 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (delayed_last_reg_355 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        delayed_last_reg_355 <= delayed_last_2_reg_343;
    end else if (((grp_read_fu_138_p2 == 32'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        delayed_last_reg_355 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1130)) begin
        if (((last_2_reg_404 == 1'd1) & (delayed_last_reg_355 == 1'd0))) begin
            last_2_1_reg_448 <= last_2_reg_404;
        end else if (((last_2_reg_404 == 1'd0) & (delayed_last_reg_355 == 1'd0))) begin
            last_2_1_reg_448 <= stream_in_24_last_V_0_data_out;
        end else if ((1'b1 == 1'b1)) begin
            last_2_1_reg_448 <= ap_phi_reg_pp4_iter0_last_2_1_reg_448;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1144)) begin
        if (((last_2_1_reg_448 == 1'd1) & (delayed_last_reg_355 == 1'd0))) begin
            last_2_2_reg_492 <= last_2_1_reg_448;
        end else if (((last_2_1_reg_448 == 1'd0) & (delayed_last_reg_355 == 1'd0))) begin
            last_2_2_reg_492 <= stream_in_24_last_V_0_data_out;
        end else if ((1'b1 == 1'b1)) begin
            last_2_2_reg_492 <= ap_phi_reg_pp4_iter0_last_2_2_reg_492;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1122)) begin
        if (((delayed_last_2_reg_343 == 1'd1) & (delayed_last_reg_355 == 1'd0))) begin
            last_2_reg_404 <= delayed_last_2_reg_343;
        end else if (((delayed_last_2_reg_343 == 1'd0) & (delayed_last_reg_355 == 1'd0))) begin
            last_2_reg_404 <= stream_in_24_last_V_0_data_out;
        end else if ((1'b1 == 1'b1)) begin
            last_2_reg_404 <= ap_phi_reg_pp4_iter0_last_2_reg_404;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1067)) begin
        if (((last_6_reg_204 == 1'd1) & (delayed_last_1_reg_179 == 1'd0))) begin
            last_6_1_reg_238 <= last_6_reg_204;
        end else if (((last_6_reg_204 == 1'd0) & (delayed_last_1_reg_179 == 1'd0))) begin
            last_6_1_reg_238 <= stream_in_24_last_V_0_data_out;
        end else if ((1'b1 == 1'b1)) begin
            last_6_1_reg_238 <= ap_phi_reg_pp2_iter0_last_6_1_reg_238;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1079)) begin
        if (((last_6_1_reg_238 == 1'd1) & (delayed_last_1_reg_179 == 1'd0))) begin
            last_6_2_reg_271 <= last_6_1_reg_238;
        end else if (((last_6_1_reg_238 == 1'd0) & (delayed_last_1_reg_179 == 1'd0))) begin
            last_6_2_reg_271 <= stream_in_24_last_V_0_data_out;
        end else if ((1'b1 == 1'b1)) begin
            last_6_2_reg_271 <= ap_phi_reg_pp2_iter0_last_6_2_reg_271;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_873)) begin
        if (((delayed_last_3_reg_167 == 1'd1) & (delayed_last_1_reg_179 == 1'd0))) begin
            last_6_reg_204 <= delayed_last_3_reg_167;
        end else if (((delayed_last_3_reg_167 == 1'd0) & (delayed_last_1_reg_179 == 1'd0))) begin
            last_6_reg_204 <= stream_in_24_last_V_0_data_out;
        end else if ((1'b1 == 1'b1)) begin
            last_6_reg_204 <= ap_phi_reg_pp2_iter0_last_6_reg_204;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1049)) begin
        if (((last_6_2_reg_271 == 1'd1) & (delayed_last_1_reg_179 == 1'd0))) begin
            p_0467_2_3_reg_302 <= ap_phi_reg_pp2_iter1_p_0467_2_2_reg_282;
        end else if (((last_6_2_reg_271 == 1'd0) & (delayed_last_1_reg_179 == 1'd0))) begin
            p_0467_2_3_reg_302 <= p_Result_33_3_fu_846_p5;
        end else if ((1'b1 == 1'b1)) begin
            p_0467_2_3_reg_302 <= ap_phi_reg_pp2_iter1_p_0467_2_3_reg_302;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1109)) begin
        if (((last_2_2_reg_492 == 1'd1) & (delayed_last_reg_355 == 1'd0))) begin
            p_067_2_3_reg_545 <= ap_phi_reg_pp4_iter1_p_067_2_2_reg_513;
        end else if (((last_2_2_reg_492 == 1'd0) & (delayed_last_reg_355 == 1'd0))) begin
            p_067_2_3_reg_545 <= tmp_23_fu_987_p4;
        end else if ((1'b1 == 1'b1)) begin
            p_067_2_3_reg_545 <= ap_phi_reg_pp4_iter1_p_067_2_3_reg_545;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1109)) begin
        if (((last_2_2_reg_492 == 1'd1) & (delayed_last_reg_355 == 1'd0))) begin
            p_071_2_3_reg_533 <= ap_phi_reg_pp4_iter1_p_071_2_2_reg_503;
        end else if (((last_2_2_reg_492 == 1'd0) & (delayed_last_reg_355 == 1'd0))) begin
            p_071_2_3_reg_533 <= tmp_22_fu_976_p4;
        end else if ((1'b1 == 1'b1)) begin
            p_071_2_3_reg_533 <= ap_phi_reg_pp4_iter1_p_071_2_3_reg_533;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1109)) begin
        if (((last_2_2_reg_492 == 1'd1) & (delayed_last_reg_355 == 1'd0))) begin
            p_087_2_3_reg_557 <= ap_phi_reg_pp4_iter1_p_087_2_2_reg_523;
        end else if (((last_2_2_reg_492 == 1'd0) & (delayed_last_reg_355 == 1'd0))) begin
            p_087_2_3_reg_557 <= p_Result_26_3_fu_963_p5;
        end else if ((1'b1 == 1'b1)) begin
            p_087_2_3_reg_557 <= ap_phi_reg_pp4_iter1_p_087_2_3_reg_557;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == alpha_V_0_vld_reg) & (1'b1 == 1'b1)) | ((1'b1 == alpha_V_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == alpha_V_0_vld_reg)))) begin
        alpha_V_0_data_reg <= alpha_V;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        alpha_V_read_reg_1069 <= alpha_V_0_data_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_reg_pp2_iter1_delayed_last_1_reg_179 <= delayed_last_1_reg_179;
        ap_reg_pp2_iter1_delayed_last_3_reg_167 <= delayed_last_3_reg_167;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        ap_reg_pp4_iter1_delayed_last_2_reg_343 <= delayed_last_2_reg_343;
        ap_reg_pp4_iter1_delayed_last_reg_355 <= delayed_last_reg_355;
    end
end

always @ (posedge ap_clk) begin
    if ((((mode_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | ((mode_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (mode_0_vld_reg == 1'b1)))) begin
        mode_0_data_reg <= mode;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (ap_reg_pp2_iter1_delayed_last_1_reg_179 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        p_0467_s_reg_192 <= p_0467_2_3_reg_302;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (ap_reg_pp4_iter1_delayed_last_reg_355 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        p_067_s_reg_380 <= p_067_2_3_reg_545;
        p_071_s_reg_368 <= p_071_2_3_reg_533;
        p_087_s_reg_392 <= p_087_2_3_reg_557;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (delayed_last_2_reg_343 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        p_Result_29_1_reg_1213 <= {{ap_phi_mux_p_087_2_3_phi_fu_561_p4[63:32]}};
        p_Result_29_2_reg_1228 <= {{ap_phi_mux_p_087_2_3_phi_fu_561_p4[95:64]}};
        tmp_28_reg_1218 <= ap_phi_mux_p_071_2_3_phi_fu_537_p4[32'd1];
        tmp_29_reg_1223 <= ap_phi_mux_p_067_2_3_phi_fu_549_p4[32'd2];
        tmp_30_reg_1233 <= ap_phi_mux_p_071_2_3_phi_fu_537_p4[32'd2];
        tmp_31_reg_1238 <= ap_phi_mux_p_067_2_3_phi_fu_549_p4[32'd3];
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_24_data_V_0_load_A == 1'b1)) begin
        stream_in_24_data_V_0_payload_A <= stream_in_24_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_24_data_V_0_load_B == 1'b1)) begin
        stream_in_24_data_V_0_payload_B <= stream_in_24_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_24_last_V_0_load_A == 1'b1)) begin
        stream_in_24_last_V_0_payload_A <= stream_in_24_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_24_last_V_0_load_B == 1'b1)) begin
        stream_in_24_last_V_0_payload_B <= stream_in_24_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_24_user_V_0_load_A == 1'b1)) begin
        stream_in_24_user_V_0_payload_A <= stream_in_24_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_24_user_V_0_load_B == 1'b1)) begin
        stream_in_24_user_V_0_payload_B <= stream_in_24_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_out_32_data_V_1_load_A == 1'b1)) begin
        stream_out_32_data_V_1_payload_A <= stream_out_32_data_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_out_32_data_V_1_load_B == 1'b1)) begin
        stream_out_32_data_V_1_payload_B <= stream_out_32_data_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_out_32_last_V_1_load_A == 1'b1)) begin
        stream_out_32_last_V_1_payload_A <= stream_out_32_last_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_out_32_last_V_1_load_B == 1'b1)) begin
        stream_out_32_last_V_1_payload_B <= stream_out_32_last_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_out_32_user_V_1_load_A == 1'b1)) begin
        stream_out_32_user_V_1_payload_A <= stream_out_32_user_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_out_32_user_V_1_load_B == 1'b1)) begin
        stream_out_32_user_V_1_payload_B <= stream_out_32_user_V_1_data_in;
    end
end

always @ (*) begin
    if ((~((stream_out_32_last_V_1_ack_in == 1'b0) | (stream_out_32_user_V_1_ack_in == 1'b0) | (stream_out_32_data_V_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        alpha_V_0_ack_out = 1'b1;
    end else begin
        alpha_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((delayed_last_1_reg_179 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if ((delayed_last_reg_355 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state21 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state21 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1111)) begin
        if ((last_2_2_reg_492 == 1'd1)) begin
            ap_phi_mux_last_2_3_phi_fu_573_p4 = last_2_2_reg_492;
        end else if ((last_2_2_reg_492 == 1'd0)) begin
            ap_phi_mux_last_2_3_phi_fu_573_p4 = stream_in_24_last_V_0_data_out;
        end else begin
            ap_phi_mux_last_2_3_phi_fu_573_p4 = ap_phi_reg_pp4_iter1_last_2_3_reg_569;
        end
    end else begin
        ap_phi_mux_last_2_3_phi_fu_573_p4 = ap_phi_reg_pp4_iter1_last_2_3_reg_569;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1051)) begin
        if ((last_6_2_reg_271 == 1'd1)) begin
            ap_phi_mux_last_6_3_phi_fu_321_p4 = last_6_2_reg_271;
        end else if ((last_6_2_reg_271 == 1'd0)) begin
            ap_phi_mux_last_6_3_phi_fu_321_p4 = stream_in_24_last_V_0_data_out;
        end else begin
            ap_phi_mux_last_6_3_phi_fu_321_p4 = ap_phi_reg_pp2_iter1_last_6_3_reg_316;
        end
    end else begin
        ap_phi_mux_last_6_3_phi_fu_321_p4 = ap_phi_reg_pp2_iter1_last_6_3_reg_316;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1051)) begin
        if ((last_6_2_reg_271 == 1'd1)) begin
            ap_phi_mux_p_0467_2_3_phi_fu_307_p4 = ap_phi_reg_pp2_iter1_p_0467_2_2_reg_282;
        end else if ((last_6_2_reg_271 == 1'd0)) begin
            ap_phi_mux_p_0467_2_3_phi_fu_307_p4 = p_Result_33_3_fu_846_p5;
        end else begin
            ap_phi_mux_p_0467_2_3_phi_fu_307_p4 = ap_phi_reg_pp2_iter1_p_0467_2_3_reg_302;
        end
    end else begin
        ap_phi_mux_p_0467_2_3_phi_fu_307_p4 = ap_phi_reg_pp2_iter1_p_0467_2_3_reg_302;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage1) & (ap_reg_pp2_iter1_delayed_last_1_reg_179 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        ap_phi_mux_p_0467_s_phi_fu_196_p4 = p_0467_2_3_reg_302;
    end else begin
        ap_phi_mux_p_0467_s_phi_fu_196_p4 = p_0467_s_reg_192;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1111)) begin
        if ((last_2_2_reg_492 == 1'd1)) begin
            ap_phi_mux_p_067_2_3_phi_fu_549_p4 = ap_phi_reg_pp4_iter1_p_067_2_2_reg_513;
        end else if ((last_2_2_reg_492 == 1'd0)) begin
            ap_phi_mux_p_067_2_3_phi_fu_549_p4 = tmp_23_fu_987_p4;
        end else begin
            ap_phi_mux_p_067_2_3_phi_fu_549_p4 = ap_phi_reg_pp4_iter1_p_067_2_3_reg_545;
        end
    end else begin
        ap_phi_mux_p_067_2_3_phi_fu_549_p4 = ap_phi_reg_pp4_iter1_p_067_2_3_reg_545;
    end
end

always @ (*) begin
    if (((ap_reg_pp4_iter1_delayed_last_reg_355 == 1'd0) & (1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        ap_phi_mux_p_067_s_phi_fu_384_p4 = p_067_2_3_reg_545;
    end else begin
        ap_phi_mux_p_067_s_phi_fu_384_p4 = p_067_s_reg_380;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1111)) begin
        if ((last_2_2_reg_492 == 1'd1)) begin
            ap_phi_mux_p_071_2_3_phi_fu_537_p4 = ap_phi_reg_pp4_iter1_p_071_2_2_reg_503;
        end else if ((last_2_2_reg_492 == 1'd0)) begin
            ap_phi_mux_p_071_2_3_phi_fu_537_p4 = tmp_22_fu_976_p4;
        end else begin
            ap_phi_mux_p_071_2_3_phi_fu_537_p4 = ap_phi_reg_pp4_iter1_p_071_2_3_reg_533;
        end
    end else begin
        ap_phi_mux_p_071_2_3_phi_fu_537_p4 = ap_phi_reg_pp4_iter1_p_071_2_3_reg_533;
    end
end

always @ (*) begin
    if (((ap_reg_pp4_iter1_delayed_last_reg_355 == 1'd0) & (1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        ap_phi_mux_p_071_s_phi_fu_372_p4 = p_071_2_3_reg_533;
    end else begin
        ap_phi_mux_p_071_s_phi_fu_372_p4 = p_071_s_reg_368;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1111)) begin
        if ((last_2_2_reg_492 == 1'd1)) begin
            ap_phi_mux_p_087_2_3_phi_fu_561_p4 = ap_phi_reg_pp4_iter1_p_087_2_2_reg_523;
        end else if ((last_2_2_reg_492 == 1'd0)) begin
            ap_phi_mux_p_087_2_3_phi_fu_561_p4 = p_Result_26_3_fu_963_p5;
        end else begin
            ap_phi_mux_p_087_2_3_phi_fu_561_p4 = ap_phi_reg_pp4_iter1_p_087_2_3_reg_557;
        end
    end else begin
        ap_phi_mux_p_087_2_3_phi_fu_561_p4 = ap_phi_reg_pp4_iter1_p_087_2_3_reg_557;
    end
end

always @ (*) begin
    if (((ap_reg_pp4_iter1_delayed_last_reg_355 == 1'd0) & (1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        ap_phi_mux_p_087_s_phi_fu_396_p4 = p_087_2_3_reg_557;
    end else begin
        ap_phi_mux_p_087_s_phi_fu_396_p4 = p_087_s_reg_392;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1051)) begin
        if ((last_6_2_reg_271 == 1'd1)) begin
            ap_phi_mux_user_1_3_phi_fu_334_p4 = ap_phi_reg_pp2_iter1_user_1_2_reg_292;
        end else if ((last_6_2_reg_271 == 1'd0)) begin
            ap_phi_mux_user_1_3_phi_fu_334_p4 = user_3_fu_835_p2;
        end else begin
            ap_phi_mux_user_1_3_phi_fu_334_p4 = ap_phi_reg_pp2_iter1_user_1_3_reg_330;
        end
    end else begin
        ap_phi_mux_user_1_3_phi_fu_334_p4 = ap_phi_reg_pp2_iter1_user_1_3_reg_330;
    end
end

always @ (*) begin
    if ((~((stream_out_32_last_V_1_ack_in == 1'b0) | (stream_out_32_user_V_1_ack_in == 1'b0) | (stream_out_32_data_V_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        mode_0_ack_out = 1'b1;
    end else begin
        mode_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp2_stage0) & (last_6_2_reg_271 == 1'd0) & (delayed_last_1_reg_179 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage3) & (last_6_1_reg_238 == 1'd0) & (delayed_last_1_reg_179 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage2) & (last_6_reg_204 == 1'd0) & (delayed_last_1_reg_179 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage1) & (delayed_last_3_reg_167 == 1'd0) & (delayed_last_1_reg_179 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((last_2_2_reg_492 == 1'd0) & (delayed_last_reg_355 == 1'd0) & (1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((last_2_1_reg_448 == 1'd0) & (delayed_last_reg_355 == 1'd0) & (1'b0 == ap_block_pp4_stage3) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((last_2_reg_404 == 1'd0) & (delayed_last_reg_355 == 1'd0) & (1'b0 == ap_block_pp4_stage2) & (1'b1 == ap_CS_fsm_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((delayed_last_2_reg_343 == 1'd0) & (delayed_last_reg_355 == 1'd0) & (1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)))) begin
        stream_in_24_TDATA_blk_n = stream_in_24_data_V_0_state[1'd0];
    end else begin
        stream_in_24_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_predicate_op153_read_state14 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage3_11001) & (ap_predicate_op140_read_state13 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage2_11001) & (ap_predicate_op127_read_state12 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage1_11001) & (ap_predicate_op113_read_state11 == 1'b1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_predicate_op235_read_state24 == 1'b1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp4_stage3_11001) & (ap_predicate_op221_read_state23 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage2_11001) & (ap_predicate_op207_read_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage1_11001) & (ap_predicate_op191_read_state21 == 1'b1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)))) begin
        stream_in_24_data_V_0_ack_out = 1'b1;
    end else begin
        stream_in_24_data_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((stream_in_24_data_V_0_sel == 1'b1)) begin
        stream_in_24_data_V_0_data_out = stream_in_24_data_V_0_payload_B;
    end else begin
        stream_in_24_data_V_0_data_out = stream_in_24_data_V_0_payload_A;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_predicate_op153_read_state14 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage3_11001) & (ap_predicate_op140_read_state13 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage2_11001) & (ap_predicate_op127_read_state12 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage1_11001) & (ap_predicate_op113_read_state11 == 1'b1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_predicate_op235_read_state24 == 1'b1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp4_stage3_11001) & (ap_predicate_op221_read_state23 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage2_11001) & (ap_predicate_op207_read_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage1_11001) & (ap_predicate_op191_read_state21 == 1'b1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)))) begin
        stream_in_24_last_V_0_ack_out = 1'b1;
    end else begin
        stream_in_24_last_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((stream_in_24_last_V_0_sel == 1'b1)) begin
        stream_in_24_last_V_0_data_out = stream_in_24_last_V_0_payload_B;
    end else begin
        stream_in_24_last_V_0_data_out = stream_in_24_last_V_0_payload_A;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_predicate_op153_read_state14 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage3_11001) & (ap_predicate_op140_read_state13 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage2_11001) & (ap_predicate_op127_read_state12 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage1_11001) & (ap_predicate_op113_read_state11 == 1'b1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_predicate_op235_read_state24 == 1'b1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp4_stage3_11001) & (ap_predicate_op221_read_state23 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage2_11001) & (ap_predicate_op207_read_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage1_11001) & (ap_predicate_op191_read_state21 == 1'b1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)))) begin
        stream_in_24_user_V_0_ack_out = 1'b1;
    end else begin
        stream_in_24_user_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((stream_in_24_user_V_0_sel == 1'b1)) begin
        stream_in_24_user_V_0_data_out = stream_in_24_user_V_0_payload_B;
    end else begin
        stream_in_24_user_V_0_data_out = stream_in_24_user_V_0_payload_A;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp2_stage0) & (delayed_last_3_reg_167 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage1) & (ap_reg_pp2_iter1_delayed_last_3_reg_167 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((ap_reg_pp4_iter1_delayed_last_2_reg_343 == 1'd0) & (1'b0 == ap_block_pp4_stage3) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3)) | ((ap_reg_pp4_iter1_delayed_last_2_reg_343 == 1'd0) & (1'b0 == ap_block_pp4_stage2) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((delayed_last_2_reg_343 == 1'd0) & (1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((ap_reg_pp4_iter1_delayed_last_2_reg_343 == 1'd0) & (1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)))) begin
        stream_out_32_TDATA_blk_n = stream_out_32_data_V_1_state[1'd1];
    end else begin
        stream_out_32_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp4_iter1_delayed_last_2_reg_343 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2) & (1'b0 == ap_block_pp4_stage2_01001))) begin
        stream_out_32_data_V_1_data_in = p_Result_29_2_reg_1228;
    end else if (((ap_reg_pp4_iter1_delayed_last_2_reg_343 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1_01001))) begin
        stream_out_32_data_V_1_data_in = p_Result_29_1_reg_1213;
    end else if (((delayed_last_2_reg_343 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_01001))) begin
        stream_out_32_data_V_1_data_in = tmp_25_fu_998_p1;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_01001))) begin
        stream_out_32_data_V_1_data_in = p_Result_s_fu_859_p3;
    end else if (((delayed_last_3_reg_167 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_01001))) begin
        stream_out_32_data_V_1_data_in = ap_phi_mux_p_0467_2_3_phi_fu_307_p4;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_01001))) begin
        stream_out_32_data_V_1_data_in = p_Result_35_1_fu_754_p3;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_01001))) begin
        stream_out_32_data_V_1_data_in = p_Result_2_fu_718_p5;
    end else begin
        stream_out_32_data_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((stream_out_32_data_V_1_sel == 1'b1)) begin
        stream_out_32_data_V_1_data_out = stream_out_32_data_V_1_payload_B;
    end else begin
        stream_out_32_data_V_1_data_out = stream_out_32_data_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (delayed_last_3_reg_167 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp4_stage2_11001) & (ap_reg_pp4_iter1_delayed_last_2_reg_343 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b0 == ap_block_pp4_stage0_11001) & (delayed_last_2_reg_343 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp4_stage1_11001) & (ap_reg_pp4_iter1_delayed_last_2_reg_343 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)))) begin
        stream_out_32_data_V_1_vld_in = 1'b1;
    end else begin
        stream_out_32_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp4_iter1_delayed_last_2_reg_343 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2) & (1'b0 == ap_block_pp4_stage2_01001))) begin
        stream_out_32_last_V_1_data_in = tmp_31_reg_1238;
    end else if (((ap_reg_pp4_iter1_delayed_last_2_reg_343 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1_01001))) begin
        stream_out_32_last_V_1_data_in = tmp_29_reg_1223;
    end else if (((delayed_last_2_reg_343 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_01001))) begin
        stream_out_32_last_V_1_data_in = ap_phi_mux_p_067_2_3_phi_fu_549_p4[32'd1];
    end else if (((delayed_last_3_reg_167 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_01001))) begin
        stream_out_32_last_V_1_data_in = ap_phi_mux_last_6_3_phi_fu_321_p4;
    end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_01001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_01001)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_01001)))) begin
        stream_out_32_last_V_1_data_in = stream_in_24_last_V_0_data_out;
    end else begin
        stream_out_32_last_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((stream_out_32_last_V_1_sel == 1'b1)) begin
        stream_out_32_last_V_1_data_out = stream_out_32_last_V_1_payload_B;
    end else begin
        stream_out_32_last_V_1_data_out = stream_out_32_last_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (delayed_last_3_reg_167 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp4_stage2_11001) & (ap_reg_pp4_iter1_delayed_last_2_reg_343 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b0 == ap_block_pp4_stage0_11001) & (delayed_last_2_reg_343 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp4_stage1_11001) & (ap_reg_pp4_iter1_delayed_last_2_reg_343 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)))) begin
        stream_out_32_last_V_1_vld_in = 1'b1;
    end else begin
        stream_out_32_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp4_iter1_delayed_last_2_reg_343 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2) & (1'b0 == ap_block_pp4_stage2_01001))) begin
        stream_out_32_user_V_1_data_in = tmp_30_reg_1233;
    end else if (((ap_reg_pp4_iter1_delayed_last_2_reg_343 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1_01001))) begin
        stream_out_32_user_V_1_data_in = tmp_28_reg_1218;
    end else if (((delayed_last_2_reg_343 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_01001))) begin
        stream_out_32_user_V_1_data_in = tmp_26_fu_1003_p1;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_01001))) begin
        stream_out_32_user_V_1_data_in = stream_in_24_user_V_0_data_out;
    end else if (((delayed_last_3_reg_167 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_01001))) begin
        stream_out_32_user_V_1_data_in = ap_phi_mux_user_1_3_phi_fu_334_p4;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_01001))) begin
        stream_out_32_user_V_1_data_in = user_2_1_fu_743_p2;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_01001))) begin
        stream_out_32_user_V_1_data_in = user_3_1_fu_615_p2;
    end else begin
        stream_out_32_user_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((stream_out_32_user_V_1_sel == 1'b1)) begin
        stream_out_32_user_V_1_data_out = stream_out_32_user_V_1_payload_B;
    end else begin
        stream_out_32_user_V_1_data_out = stream_out_32_user_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (delayed_last_3_reg_167 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp4_stage2_11001) & (ap_reg_pp4_iter1_delayed_last_2_reg_343 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b0 == ap_block_pp4_stage0_11001) & (delayed_last_2_reg_343 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp4_stage1_11001) & (ap_reg_pp4_iter1_delayed_last_2_reg_343 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)))) begin
        stream_out_32_user_V_1_vld_in = 1'b1;
    end else begin
        stream_out_32_user_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            if (((grp_read_fu_138_p2 == 32'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((grp_read_fu_138_p2 == 32'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((grp_read_fu_138_p2 == 32'd2) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((grp_read_fu_138_p2 == 32'd3) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((grp_read_fu_138_p2 == 32'd4) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((stream_out_32_last_V_1_ack_in == 1'b0) | (stream_out_32_user_V_1_ack_in == 1'b0) | (stream_out_32_data_V_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((~((delayed_last_1_reg_179 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage1_subdone)) & (1'b0 == ap_block_pp2_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end else if (((delayed_last_1_reg_179 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_pp2_stage2 : begin
            if ((1'b0 == ap_block_pp2_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end
        end
        ap_ST_fsm_pp2_stage3 : begin
            if ((1'b0 == ap_block_pp2_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            if ((~((delayed_last_reg_355 == 1'd1) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1_subdone)) & (1'b0 == ap_block_pp4_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end else if (((delayed_last_reg_355 == 1'd1) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end
        end
        ap_ST_fsm_pp4_stage2 : begin
            if ((1'b0 == ap_block_pp4_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end
        end
        ap_ST_fsm_pp4_stage3 : begin
            if ((~((ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3_subdone)) & (1'b0 == ap_block_pp4_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp2_stage3 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp4_stage2 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp4_stage3 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((stream_out_32_data_V_1_ack_in == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((stream_out_32_data_V_1_ack_in == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((stream_in_24_data_V_0_vld_out == 1'b0) | (stream_out_32_data_V_1_ack_in == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((stream_in_24_data_V_0_vld_out == 1'b0) | (stream_out_32_data_V_1_ack_in == 1'b0)));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((stream_out_32_data_V_1_ack_in == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((stream_out_32_data_V_1_ack_in == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage1_01001 = ((stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage1_11001 = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((stream_in_24_data_V_0_vld_out == 1'b0) | (stream_out_32_data_V_1_ack_in == 1'b0)));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((stream_in_24_data_V_0_vld_out == 1'b0) | (stream_out_32_data_V_1_ack_in == 1'b0)));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_01001 = ((ap_predicate_op153_read_state14 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((ap_enable_reg_pp2_iter1 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((ap_predicate_op153_read_state14 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0))));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((ap_enable_reg_pp2_iter1 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((ap_predicate_op153_read_state14 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0))));
end

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage1_01001 = ((ap_predicate_op113_read_state11 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage1_11001 = (((1'b1 == ap_block_state15_io) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((ap_predicate_op113_read_state11 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp2_stage1_subdone = (((1'b1 == ap_block_state15_io) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((ap_predicate_op113_read_state11 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1)));
end

assign ap_block_pp2_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage2_11001 = ((ap_predicate_op127_read_state12 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage2_subdone = ((ap_predicate_op127_read_state12 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

assign ap_block_pp2_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage3_11001 = ((ap_predicate_op140_read_state13 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage3_subdone = ((ap_predicate_op140_read_state13 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = ((stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = (((stream_out_32_data_V_1_ack_in == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & ((stream_in_24_data_V_0_vld_out == 1'b0) | (stream_out_32_data_V_1_ack_in == 1'b0))));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = (((stream_out_32_data_V_1_ack_in == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & ((stream_in_24_data_V_0_vld_out == 1'b0) | (stream_out_32_data_V_1_ack_in == 1'b0))));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage0_01001 = ((ap_predicate_op235_read_state24 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp4_stage0_11001 = ((ap_enable_reg_pp4_iter1 == 1'b1) & ((1'b1 == ap_block_state24_io) | ((ap_predicate_op235_read_state24 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0))));
end

always @ (*) begin
    ap_block_pp4_stage0_subdone = ((ap_enable_reg_pp4_iter1 == 1'b1) & ((1'b1 == ap_block_state24_io) | ((ap_predicate_op235_read_state24 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0))));
end

assign ap_block_pp4_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage1_01001 = ((ap_predicate_op191_read_state21 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp4_stage1_11001 = (((1'b1 == ap_block_state25_io) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((ap_predicate_op191_read_state21 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp4_stage1_subdone = (((1'b1 == ap_block_state25_io) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((ap_predicate_op191_read_state21 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1)));
end

assign ap_block_pp4_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage2_01001 = ((ap_predicate_op207_read_state22 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp4_stage2_11001 = (((1'b1 == ap_block_state26_io) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((ap_predicate_op207_read_state22 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp4_stage2_subdone = (((1'b1 == ap_block_state26_io) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((ap_predicate_op207_read_state22 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1)));
end

assign ap_block_pp4_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage3_01001 = ((ap_predicate_op221_read_state23 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp4_stage3_11001 = (((1'b1 == ap_block_state27_io) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((ap_predicate_op221_read_state23 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp4_stage3_subdone = (((1'b1 == ap_block_state27_io) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((ap_predicate_op221_read_state23 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1)));
end

assign ap_block_state10_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp2_stage1_iter0 = ((ap_predicate_op113_read_state11 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_block_state12_pp2_stage2_iter0 = ((ap_predicate_op127_read_state12 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_block_state13_pp2_stage3_iter0 = ((ap_predicate_op140_read_state13 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_block_state14_io = ((delayed_last_3_reg_167 == 1'd0) & (stream_out_32_data_V_1_ack_in == 1'b0));
end

always @ (*) begin
    ap_block_state14_pp2_stage0_iter1 = ((ap_predicate_op153_read_state14 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_block_state15_io = ((ap_reg_pp2_iter1_delayed_last_3_reg_167 == 1'd0) & (stream_out_32_data_V_1_ack_in == 1'b0));
end

assign ap_block_state15_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_pp3_stage0_iter0 = (stream_in_24_data_V_0_vld_out == 1'b0);
end

assign ap_block_state18_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state21_pp4_stage1_iter0 = ((ap_predicate_op191_read_state21 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_block_state22_pp4_stage2_iter0 = ((ap_predicate_op207_read_state22 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_block_state23_pp4_stage3_iter0 = ((ap_predicate_op221_read_state23 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_block_state24_io = ((delayed_last_2_reg_343 == 1'd0) & (stream_out_32_data_V_1_ack_in == 1'b0));
end

always @ (*) begin
    ap_block_state24_pp4_stage0_iter1 = ((ap_predicate_op235_read_state24 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_block_state25_io = ((ap_reg_pp4_iter1_delayed_last_2_reg_343 == 1'd0) & (stream_out_32_data_V_1_ack_in == 1'b0));
end

assign ap_block_state25_pp4_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state26_io = ((ap_reg_pp4_iter1_delayed_last_2_reg_343 == 1'd0) & (stream_out_32_data_V_1_ack_in == 1'b0));
end

assign ap_block_state26_pp4_stage2_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state27_io = ((ap_reg_pp4_iter1_delayed_last_2_reg_343 == 1'd0) & (stream_out_32_data_V_1_ack_in == 1'b0));
end

assign ap_block_state27_pp4_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage1_iter0 = (stream_in_24_data_V_0_vld_out == 1'b0);
end

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6 = ((stream_out_32_last_V_1_ack_in == 1'b0) | (stream_out_32_user_V_1_ack_in == 1'b0) | (stream_out_32_data_V_1_ack_in == 1'b0));
end

assign ap_block_state7_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp1_stage1_iter0 = (stream_in_24_data_V_0_vld_out == 1'b0);
end

assign ap_block_state9_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1049 = ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0));
end

always @ (*) begin
    ap_condition_1051 = ((1'b0 == ap_block_pp2_stage0) & (delayed_last_1_reg_179 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0));
end

always @ (*) begin
    ap_condition_1067 = ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1079 = ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1109 = ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0));
end

always @ (*) begin
    ap_condition_1111 = ((delayed_last_reg_355 == 1'd0) & (1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0));
end

always @ (*) begin
    ap_condition_1122 = ((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1));
end

always @ (*) begin
    ap_condition_1130 = ((1'b0 == ap_block_pp4_stage2_11001) & (1'b1 == ap_CS_fsm_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1144 = ((1'b0 == ap_block_pp4_stage3_11001) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1749 = ((1'b0 == ap_block_pp2_stage2_11001) & (delayed_last_1_reg_179 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1753 = ((1'b0 == ap_block_pp2_stage1_11001) & (delayed_last_1_reg_179 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1));
end

always @ (*) begin
    ap_condition_1760 = ((1'b0 == ap_block_pp4_stage2_11001) & (delayed_last_reg_355 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1764 = ((1'b0 == ap_block_pp4_stage1_11001) & (delayed_last_reg_355 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1));
end

always @ (*) begin
    ap_condition_873 = ((1'b0 == ap_block_pp2_stage1_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_phi_reg_pp2_iter0_last_6_1_reg_238 = 'bx;

assign ap_phi_reg_pp2_iter0_last_6_2_reg_271 = 'bx;

assign ap_phi_reg_pp2_iter0_last_6_reg_204 = 'bx;

assign ap_phi_reg_pp2_iter0_p_0467_2_2_reg_282 = 'bx;

assign ap_phi_reg_pp2_iter0_user_1_2_reg_292 = 'bx;

assign ap_phi_reg_pp2_iter1_last_6_3_reg_316 = 'bx;

assign ap_phi_reg_pp2_iter1_p_0467_2_3_reg_302 = 'bx;

assign ap_phi_reg_pp2_iter1_user_1_3_reg_330 = 'bx;

assign ap_phi_reg_pp4_iter0_last_2_1_reg_448 = 'bx;

assign ap_phi_reg_pp4_iter0_last_2_2_reg_492 = 'bx;

assign ap_phi_reg_pp4_iter0_last_2_reg_404 = 'bx;

assign ap_phi_reg_pp4_iter0_p_067_2_2_reg_513 = 'bx;

assign ap_phi_reg_pp4_iter0_p_071_2_2_reg_503 = 'bx;

assign ap_phi_reg_pp4_iter0_p_087_2_2_reg_523 = 'bx;

assign ap_phi_reg_pp4_iter1_last_2_3_reg_569 = 'bx;

assign ap_phi_reg_pp4_iter1_p_067_2_3_reg_545 = 'bx;

assign ap_phi_reg_pp4_iter1_p_071_2_3_reg_533 = 'bx;

assign ap_phi_reg_pp4_iter1_p_087_2_3_reg_557 = 'bx;

always @ (*) begin
    ap_predicate_op113_read_state11 = ((delayed_last_3_reg_167 == 1'd0) & (delayed_last_1_reg_179 == 1'd0));
end

always @ (*) begin
    ap_predicate_op127_read_state12 = ((last_6_reg_204 == 1'd0) & (delayed_last_1_reg_179 == 1'd0));
end

always @ (*) begin
    ap_predicate_op140_read_state13 = ((last_6_1_reg_238 == 1'd0) & (delayed_last_1_reg_179 == 1'd0));
end

always @ (*) begin
    ap_predicate_op153_read_state14 = ((last_6_2_reg_271 == 1'd0) & (delayed_last_1_reg_179 == 1'd0));
end

always @ (*) begin
    ap_predicate_op191_read_state21 = ((delayed_last_2_reg_343 == 1'd0) & (delayed_last_reg_355 == 1'd0));
end

always @ (*) begin
    ap_predicate_op207_read_state22 = ((last_2_reg_404 == 1'd0) & (delayed_last_reg_355 == 1'd0));
end

always @ (*) begin
    ap_predicate_op221_read_state23 = ((last_2_1_reg_448 == 1'd0) & (delayed_last_reg_355 == 1'd0));
end

always @ (*) begin
    ap_predicate_op235_read_state24 = ((last_2_2_reg_492 == 1'd0) & (delayed_last_reg_355 == 1'd0));
end

always @ (*) begin
    ap_rst_n_control_inv = ~ap_rst_n_control;
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_fu_589_p1 = stream_in_24_last_V_0_data_out;

assign grp_read_fu_138_p2 = mode_0_data_reg;

assign out_c1_V_fu_650_p2 = (tmp_fu_632_p1 + tmp_1_fu_646_p1);

assign out_c2_V_fu_684_p2 = (tmp_3_fu_666_p1 + tmp_4_fu_680_p1);

assign p_Result_1_fu_636_p4 = {{stream_in_24_data_V_0_data_out[15:8]}};

assign p_Result_26_1_fu_899_p5 = {{ap_phi_reg_pp4_iter0_p_087_2_reg_437[95:48]}, {stream_in_24_data_V_0_data_out}, {ap_phi_reg_pp4_iter0_p_087_2_reg_437[23:0]}};

assign p_Result_26_2_fu_931_p5 = {{ap_phi_reg_pp4_iter0_p_087_2_1_reg_481[95:72]}, {stream_in_24_data_V_0_data_out}, {ap_phi_reg_pp4_iter0_p_087_2_1_reg_481[47:0]}};

assign p_Result_26_3_fu_963_p5 = {{stream_in_24_data_V_0_data_out}, {ap_phi_reg_pp4_iter1_p_087_2_2_reg_523[71:0]}};

assign p_Result_2_fu_718_p5 = {{{{p_Result_8_fu_708_p4}, {tmp_12_fu_704_p1}}, {p_Result_6_fu_694_p4}}, {tmp_11_fu_690_p1}};

assign p_Result_33_1_fu_793_p5 = {{ap_phi_reg_pp2_iter0_p_0467_2_reg_215[31:16]}, {tmp_18_fu_789_p1}, {ap_phi_reg_pp2_iter0_p_0467_2_reg_215[7:0]}};

assign p_Result_33_2_fu_819_p5 = {{ap_phi_reg_pp2_iter0_p_0467_2_1_reg_249[31:24]}, {tmp_21_fu_815_p1}, {ap_phi_reg_pp2_iter0_p_0467_2_1_reg_249[15:0]}};

assign p_Result_33_3_fu_846_p5 = {{tmp_24_fu_842_p1}, {ap_phi_reg_pp2_iter1_p_0467_2_2_reg_282[23:0]}};

assign p_Result_35_1_fu_754_p3 = {{tmp_10_fu_750_p1}, {tmp_8_fu_735_p1}};

assign p_Result_3_fu_656_p4 = {{stream_in_24_data_V_0_data_out[23:16]}};

assign p_Result_4_fu_670_p4 = {{stream_in_24_data_V_0_data_out[23:16]}};

assign p_Result_6_fu_694_p4 = {{out_c1_V_fu_650_p2[8:1]}};

assign p_Result_7_fu_867_p5 = {{ap_phi_mux_p_087_s_phi_fu_396_p4[95:24]}, {stream_in_24_data_V_0_data_out}};

assign p_Result_8_fu_708_p4 = {{out_c2_V_fu_684_p2[8:1]}};

assign p_Result_9_fu_767_p5 = {{ap_phi_mux_p_0467_s_phi_fu_196_p4[31:8]}, {tmp_15_fu_763_p1}};

assign p_Result_s_30_fu_622_p4 = {{stream_in_24_data_V_0_data_out[15:8]}};

assign p_Result_s_fu_859_p3 = {{alpha_V_read_reg_1069}, {stream_in_24_data_V_0_data_out}};

assign stream_in_24_TREADY = stream_in_24_last_V_0_state[1'd1];

assign stream_in_24_data_V_0_ack_in = stream_in_24_data_V_0_state[1'd1];

assign stream_in_24_data_V_0_load_A = (stream_in_24_data_V_0_state_cmp_full & ~stream_in_24_data_V_0_sel_wr);

assign stream_in_24_data_V_0_load_B = (stream_in_24_data_V_0_state_cmp_full & stream_in_24_data_V_0_sel_wr);

assign stream_in_24_data_V_0_sel = stream_in_24_data_V_0_sel_rd;

assign stream_in_24_data_V_0_state_cmp_full = ((stream_in_24_data_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign stream_in_24_data_V_0_vld_in = stream_in_24_TVALID;

assign stream_in_24_data_V_0_vld_out = stream_in_24_data_V_0_state[1'd0];

assign stream_in_24_last_V_0_ack_in = stream_in_24_last_V_0_state[1'd1];

assign stream_in_24_last_V_0_load_A = (stream_in_24_last_V_0_state_cmp_full & ~stream_in_24_last_V_0_sel_wr);

assign stream_in_24_last_V_0_load_B = (stream_in_24_last_V_0_state_cmp_full & stream_in_24_last_V_0_sel_wr);

assign stream_in_24_last_V_0_sel = stream_in_24_last_V_0_sel_rd;

assign stream_in_24_last_V_0_state_cmp_full = ((stream_in_24_last_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign stream_in_24_last_V_0_vld_in = stream_in_24_TVALID;

assign stream_in_24_last_V_0_vld_out = stream_in_24_last_V_0_state[1'd0];

assign stream_in_24_user_V_0_ack_in = stream_in_24_user_V_0_state[1'd1];

assign stream_in_24_user_V_0_load_A = (stream_in_24_user_V_0_state_cmp_full & ~stream_in_24_user_V_0_sel_wr);

assign stream_in_24_user_V_0_load_B = (stream_in_24_user_V_0_state_cmp_full & stream_in_24_user_V_0_sel_wr);

assign stream_in_24_user_V_0_sel = stream_in_24_user_V_0_sel_rd;

assign stream_in_24_user_V_0_state_cmp_full = ((stream_in_24_user_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign stream_in_24_user_V_0_vld_in = stream_in_24_TVALID;

assign stream_in_24_user_V_0_vld_out = stream_in_24_user_V_0_state[1'd0];

assign stream_out_32_TDATA = stream_out_32_data_V_1_data_out;

assign stream_out_32_TLAST = stream_out_32_last_V_1_data_out;

assign stream_out_32_TUSER = stream_out_32_user_V_1_data_out;

assign stream_out_32_TVALID = stream_out_32_last_V_1_state[1'd0];

assign stream_out_32_data_V_1_ack_in = stream_out_32_data_V_1_state[1'd1];

assign stream_out_32_data_V_1_ack_out = stream_out_32_TREADY;

assign stream_out_32_data_V_1_load_A = (stream_out_32_data_V_1_state_cmp_full & ~stream_out_32_data_V_1_sel_wr);

assign stream_out_32_data_V_1_load_B = (stream_out_32_data_V_1_state_cmp_full & stream_out_32_data_V_1_sel_wr);

assign stream_out_32_data_V_1_sel = stream_out_32_data_V_1_sel_rd;

assign stream_out_32_data_V_1_state_cmp_full = ((stream_out_32_data_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign stream_out_32_data_V_1_vld_out = stream_out_32_data_V_1_state[1'd0];

assign stream_out_32_last_V_1_ack_in = stream_out_32_last_V_1_state[1'd1];

assign stream_out_32_last_V_1_ack_out = stream_out_32_TREADY;

assign stream_out_32_last_V_1_load_A = (stream_out_32_last_V_1_state_cmp_full & ~stream_out_32_last_V_1_sel_wr);

assign stream_out_32_last_V_1_load_B = (stream_out_32_last_V_1_state_cmp_full & stream_out_32_last_V_1_sel_wr);

assign stream_out_32_last_V_1_sel = stream_out_32_last_V_1_sel_rd;

assign stream_out_32_last_V_1_state_cmp_full = ((stream_out_32_last_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign stream_out_32_last_V_1_vld_out = stream_out_32_last_V_1_state[1'd0];

assign stream_out_32_user_V_1_ack_in = stream_out_32_user_V_1_state[1'd1];

assign stream_out_32_user_V_1_ack_out = stream_out_32_TREADY;

assign stream_out_32_user_V_1_load_A = (stream_out_32_user_V_1_state_cmp_full & ~stream_out_32_user_V_1_sel_wr);

assign stream_out_32_user_V_1_load_B = (stream_out_32_user_V_1_state_cmp_full & stream_out_32_user_V_1_sel_wr);

assign stream_out_32_user_V_1_sel = stream_out_32_user_V_1_sel_rd;

assign stream_out_32_user_V_1_state_cmp_full = ((stream_out_32_user_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign stream_out_32_user_V_1_vld_out = stream_out_32_user_V_1_state[1'd0];

assign tmp_10_fu_750_p1 = stream_in_24_data_V_0_data_out[15:0];

assign tmp_11_fu_690_p1 = stream_in_24_data_V_0_data_out[7:0];

assign tmp_12_fu_704_p1 = stream_in_24_data_V_0_data_out[7:0];

always @ (*) begin
    tmp_13_fu_879_p4 = ap_phi_mux_p_071_s_phi_fu_372_p4;
    tmp_13_fu_879_p4[32'd0] = |(stream_in_24_user_V_0_data_out);
end

always @ (*) begin
    tmp_14_fu_889_p4 = ap_phi_mux_p_067_s_phi_fu_384_p4;
    tmp_14_fu_889_p4[32'd0] = |(stream_in_24_last_V_0_data_out);
end

assign tmp_15_fu_763_p1 = stream_in_24_data_V_0_data_out[7:0];

always @ (*) begin
    tmp_16_fu_911_p4 = ap_phi_reg_pp4_iter0_p_071_2_reg_415;
    tmp_16_fu_911_p4[32'd1] = |(stream_in_24_user_V_0_data_out);
end

always @ (*) begin
    tmp_17_fu_921_p4 = ap_phi_reg_pp4_iter0_p_067_2_reg_426;
    tmp_17_fu_921_p4[32'd1] = |(stream_in_24_last_V_0_data_out);
end

assign tmp_18_fu_789_p1 = stream_in_24_data_V_0_data_out[7:0];

always @ (*) begin
    tmp_19_fu_943_p4 = ap_phi_reg_pp4_iter0_p_071_2_1_reg_459;
    tmp_19_fu_943_p4[32'd2] = |(stream_in_24_user_V_0_data_out);
end

assign tmp_1_fu_646_p1 = p_Result_1_fu_636_p4;

always @ (*) begin
    tmp_20_fu_953_p4 = ap_phi_reg_pp4_iter0_p_067_2_1_reg_470;
    tmp_20_fu_953_p4[32'd2] = |(stream_in_24_last_V_0_data_out);
end

assign tmp_21_fu_815_p1 = stream_in_24_data_V_0_data_out[7:0];

always @ (*) begin
    tmp_22_fu_976_p4 = ap_phi_reg_pp4_iter1_p_071_2_2_reg_503;
    tmp_22_fu_976_p4[32'd3] = |(stream_in_24_user_V_0_data_out);
end

always @ (*) begin
    tmp_23_fu_987_p4 = ap_phi_reg_pp4_iter1_p_067_2_2_reg_513;
    tmp_23_fu_987_p4[32'd3] = |(stream_in_24_last_V_0_data_out);
end

assign tmp_24_fu_842_p1 = stream_in_24_data_V_0_data_out[7:0];

assign tmp_25_fu_998_p1 = ap_phi_mux_p_087_2_3_phi_fu_561_p4[31:0];

assign tmp_26_fu_1003_p1 = ap_phi_mux_p_071_2_3_phi_fu_537_p4[0:0];

assign tmp_3_fu_666_p1 = p_Result_3_fu_656_p4;

assign tmp_4_fu_680_p1 = p_Result_4_fu_670_p4;

assign tmp_8_fu_735_p1 = stream_in_24_data_V_0_data_out[15:0];

assign tmp_fu_632_p1 = p_Result_s_30_fu_622_p4;

assign user_2_1_fu_743_p2 = (stream_in_24_user_V_0_data_out | stream_in_24_user_V_0_data_out);

assign user_2_fu_809_p2 = (stream_in_24_user_V_0_data_out | ap_phi_reg_pp2_iter0_user_1_1_reg_260);

assign user_3_1_fu_615_p2 = (stream_in_24_user_V_0_data_out | stream_in_24_user_V_0_data_out);

assign user_3_fu_835_p2 = (stream_in_24_user_V_0_data_out | ap_phi_reg_pp2_iter1_user_1_2_reg_292);

assign user_s_fu_783_p2 = (stream_in_24_user_V_0_data_out | ap_phi_reg_pp2_iter0_user_1_reg_226);

endmodule //pixel_pack
